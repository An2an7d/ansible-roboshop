- name: setting up shipping server
  hosts: shipping
  become: yes
  tasks:
  - name: install maven
    ansible.builtin.yum:
      name: maven
      state: installed
  
  - name: check roboshop user exists or not
    ansible.builtin.command: id roboshop 
    register: output
    ignore_errors: true
  
  - name: create user roboshop
    ansible.builtin.user:
      name: roboshop
    when: output.rc != 0
  
  - name: check /app directory exists or not
    ansible.builtin.stat:
      path: /app
    register: directory
  
  - name: create directory
    ansible.builtin.file:
      path: /app
      state: directory
    when: directory.stat.exists == False
  
  - name: download shipping artifact and extract
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /app
      remote_src: yes
  
  - name: install dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app
  
  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service
  
  - name: daemon-reload
    ansible.builtin.systemd:
      daemon-reload: yes
  
  - name: install mysql client
    ansible.builtin.yum:
      name: mysql
      state: installed
  
  - name: load shipping data
    ansible.builtin.shell: mysql -h mysql.nowheretobefound.online -uroot -pRoboShop@1 < /app/schema/shipping.sql

  - name: restart shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: yes
